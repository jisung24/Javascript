'use strict';
// * << 변수 >> 
// * 우리가 app을 키면 세 가지의 일들이 발생한다. 
// * 1. input(입력을 받음 => 이 때 잠깐 저장 할 변수가 필요)
// * 2. process(처리,연산 => 연산된 값을 잠시 저장할 수 있는 변수 필요)
// * 3. output(출력 => 계산이 끝난 값을 저장하는 변수)

// * 1) 정의(사물함이라고 생각하자) 
// -> 데이터를 처리하고, 출력하기 위해 잠시 보관하는 곳. 
// -> 자료를 저장할 수 있는 이름이 주어진 저장장소! 
// -> @@ 이름이 왜 필요한가? @@ 
// -> 1. 자료의 위치를 찾을 수 있다.(주소값으로 찾지 못 해 => 껐다키면 위치 바뀜)
// -> 2. 어떤 값이 들어있는지 쉽게 알 수 있다.
// -> 변수이름으로 위치를 찾을 수 있기 때문에 `식별자` 라고도 한다
// -> 우리가 연산을 하기위해 잠깐 값을 저장했는데, 연산을 하려면 그 값을 꺼내야 되잖아.
// -> 그럼 그 값을 어떻게 꺼내...? => 이름으로 꺼낸다!(주소값이 뭐든간에 한 번에 찾을 수 있다.)
let a = 10; // a라는 사물함. => a라는 식별자! 
b = 15; // 재할당 

// 즉 변수는 우리가 계산을 하기위해, 잃어버리지 않기 위해 필요한 공간이고,
// 계산을 할 때 그 변수 안에 있는 값은 변수 이름이라는 식별자로 찾는다.!
